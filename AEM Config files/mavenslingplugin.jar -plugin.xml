<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.4 on 2017-03-21 -->

<plugin>
  <name>Apache Sling Maven Sling Plugin</name>
  <description>Apache Sling Maven Plugin for Supporting Bundle Development</description>
  <groupId>org.apache.sling</groupId>
  <artifactId>maven-sling-plugin</artifactId>
  <version>2.2.0</version>
  <goalPrefix>sling</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>deploy</goal>
      <description>Deploy a JAR representing an OSGi Bundle to a Sling OSGi Bundle Repository.
This method posts the bundle built by maven to the OSGi Bundle Repository.
The plugin uses a &lt;em&gt;multipart/format-data&lt;/em&gt; POST request to just post the file to
the URL configured in the &lt;code&gt;obr&lt;/code&gt; property.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>deploy</phase>
      <implementation>org.apache.sling.maven.bundlesupport.BundleDeployMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>buildDirectory</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>false</editable>
          <description>The directory for the generated JAR.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>jarName</name>
          <alias>jarName</alias>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>obr</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL to the OSGi Bundle repository to which the bundle is posted, e.g.
&lt;code&gt;http://obr.sample.com&lt;/code&gt;</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to skip this step even though it has been configured in the
project to be executed. This property may be set by the
&lt;code&gt;sling.deploy.skip&lt;/code&gt; comparable to the &lt;code&gt;maven.test.skip&lt;/code&gt;
property to prevent running the unit tests.</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildDirectory implementation="java.lang.String" default-value="${project.build.directory}"/>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <jarName implementation="java.lang.String">${project.build.finalName}</jarName>
        <obr implementation="java.lang.String">${obr}</obr>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${sling.deploy.skip}</skip>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>deploy-file</goal>
      <description>Deploy a JAR representing an OSGi Bundle to a Sling OSGi Bundle Repository.
This method posts the bundle referenced via &lt;code&gt;sling.file&lt;/code&gt;
to an OSGi Bundle Repository accepting the bundle. The plugin uses
a &lt;em&gt;multipart/format-data&lt;/em&gt; POST request to just post the file to
the URL configured in the &lt;code&gt;obr&lt;/code&gt; property.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.BundleDeployFileMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>obr</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL to the OSGi Bundle repository to which the bundle is posted, e.g.
&lt;code&gt;http://obr.sample.com&lt;/code&gt;</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <bundleFileName implementation="java.lang.String">${sling.file}</bundleFileName>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <obr implementation="java.lang.String">${obr}</obr>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>fsmount</goal>
      <description>Creates OSGi configurations for the
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/accessing-filesystem-resources-extensions-fsresource.html&quot;&gt;Apache Sling File System Resource Provider&lt;/a&gt;.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.FsMountMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>fileVaultFilterXmlFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path to META-INF/vault/filter.xml when using FileVault XML filesystem
layout.</description>
        </parameter>
        <parameter>
          <name>fileVaultJcrRootFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>FileVault filesystem layout content root folder.</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <bundleFileName implementation="java.lang.String" default-value="${project.build.directory}/${project.build.finalName}.jar">${sling.file}</bundleFileName>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <fileVaultFilterXmlFile implementation="java.io.File">${sling.filevault.filterxml.file}</fileVaultFilterXmlFile>
        <fileVaultJcrRootFile implementation="java.io.File">${sling.filevault.jcr_root.file}</fileVaultJcrRootFile>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>fsunmount</goal>
      <description>Removes OSGi configurations for the 
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/accessing-filesystem-resources-extensions-fsresource.html&quot;&gt;Apache Sling File System Resource Provider&lt;/a&gt;.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.FsUnMountMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>fileVaultFilterXmlFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Path to META-INF/vault/filter.xml when using FileVault XML filesystem
layout.</description>
        </parameter>
        <parameter>
          <name>fileVaultJcrRootFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>FileVault filesystem layout content root folder.</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <bundleFileName implementation="java.lang.String" default-value="${project.build.directory}/${project.build.finalName}.jar">${sling.file}</bundleFileName>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <fileVaultFilterXmlFile implementation="java.io.File">${sling.filevault.filterxml.file}</fileVaultFilterXmlFile>
        <fileVaultJcrRootFile implementation="java.io.File">${sling.filevault.jcr_root.file}</fileVaultJcrRootFile>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>generate-adapter-metadata</goal>
      <description>Build Adapter Metadata from Annotated Classes</description>
      <requiresDependencyResolution>compile</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-classes</phase>
      <implementation>org.apache.sling.maven.bundlesupport.GenerateAdapterMetadataMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>buildOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>fileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Name of the generated descriptor file.</description>
        </parameter>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
      </parameters>
      <configuration>
        <buildOutputDirectory implementation="java.io.File" default-value="${project.build.outputDirectory}"/>
        <fileName implementation="java.lang.String" default-value="SLING-INF/adapters.json">${adapter.descriptor.name}</fileName>
        <outputDirectory implementation="java.io.File" default-value="${project.build.directory}/adapter-plugin-generated"/>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on maven-sling-plugin.&lt;br&gt;
Call &lt;code&gt;mvn sling:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>install</goal>
      <description>Install an OSGi bundle to a running Sling instance.
The plugin places an HTTP POST request to
&lt;a href=&quot;http://felix.apache.org/documentation/subprojects/apache-felix-web-console/web-console-restful-api.html#post-requests&quot;&gt;Felix Web Console&lt;/a&gt;.
It&apos;s also possible to HTTP PUT instead of POST leveraging the &lt;a href=&quot;http://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;WebDAV bundle from Sling&lt;/a&gt;.
Since version 2.1.8 you can also leverage the the &lt;a href=&quot;http://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html&quot;&gt;Sling POST servlet&lt;/a&gt;
for that The chosen method depends on the parameter {@link #deploymentMethod}.
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Intermediate Node Creation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
For all &lt;code&gt;deploymentMethod&lt;/code&gt;s except WebDAV the bundle is not directly deployed within the OSGi container,
but rather being uploaded to the JCR and from there on being picked up by the
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/jcr-installer-provider.html&quot;&gt;JCR Installer Provider&lt;/a&gt; asynchronously, which takes care 
of deploying it in the OSGi container. For both other deployment methods, intermediate nodes (i.e. inexisting parent nodes) 
are automatically created. The primary type of those intermediate nodes depend on the deployment method.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
 WebDAV, uses the configured collection node type, by default &lt;code&gt;sling:Folder&lt;/code&gt;
 (see also &lt;a href=&quot;https://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;WebDAV Configuration&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
 SlingPostServlet, uses internally &lt;code&gt;ResourceResolverFactory.create(...)&lt;/code&gt; without setting any &lt;code&gt;jcr:primaryType&lt;/code&gt;.
 Therefore the &lt;code&gt;JcrResourceProviderFactory&lt;/code&gt; will call &lt;code&gt;Node.addNode(String relPath)&lt;/code&gt; which determines a fitting 
 node type automatically, depending on the parents node type definition (see &lt;a href=&quot;http://www.day.com/specs/jsr170/javadocs/jcr-2.0/javax/jcr/Node.html#addNode%28java.lang.String%29&quot;&gt;Javadoc&lt;/a&gt;).
 So in most of the cases this should be a &lt;code&gt;sling:Folder&lt;/code&gt;, as this is the first allowed child node definition in &lt;code&gt;sling:Folder&lt;/code&gt;.
 This only may differ, if your existing parent node is not of type &lt;code&gt;sling:Folder&lt;/code&gt; itself.
&lt;/li&gt;
&lt;/ul&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>install</phase>
      <implementation>org.apache.sling.maven.bundlesupport.BundleInstallMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>bundleStart</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to start the uploaded bundle or not. Only applies when POSTing
to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>bundleStartLevel</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The start level to set on the installed bundle. If the bundle is already installed and therefore is only 
updated this parameter is ignored. The parameter is also ignored if the running Sling instance has no 
StartLevel service (which is unusual actually). Only applies when POSTing to Felix Web Console.</description>
        </parameter>
        <parameter>
          <name>deploymentMethod</name>
          <type>org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bundle deployment method. One of the following three values are allowed
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;WebConsole&lt;/strong&gt;, uses the &lt;a href=&quot;http://felix.apache.org/documentation/subprojects/apache-felix-web-console/web-console-restful-api.html#post-requests&quot;&gt;
 Felix Web Console REST API&lt;/a&gt; for deployment (HTTP POST). This is the default. 
 Make sure that {@link #slingUrl} points to the Felix Web Console in that case.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;WebDAV&lt;/strong&gt;, uses &lt;a href=&quot;https://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;
 WebDAV&lt;/a&gt; for deployment (HTTP PUT). Make sure that {@link #slingUrl} points to the entry path of 
 the Sling WebDAV bundle (usually below regular Sling root URL). Issues a HTTP Delete for the uninstall goal.
 &lt;li&gt;&lt;strong&gt;SlingPostServlet&lt;/strong&gt;, uses the
 &lt;a href=&quot;https://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html&quot;&gt;Sling Post Servlet&lt;/a&gt; for deployment (HTTP POST).
 Make sure that {@link #slingUrl} points a path which is handled by the Sling POST Servlet (usually below regular Sling root URL).&lt;/li&gt;
&lt;/ol&gt;

This has precedence over the deprecated parameter {@link #usePut}.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>mimeType</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The content type / mime type used for WebDAV or Sling POST deployment.</description>
        </parameter>
        <parameter>
          <name>mountByFS</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to add the mapping for the
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/accessing-filesystem-resources-extensions-fsresource.html&quot;&gt;Apache Sling File System Resource Provider&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>refreshPackages</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to refresh the packages after installing the uploaded bundle.
Only applies when POSTing to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to skip this step even though it has been configured in the
project to be executed. This property may be set by the
&lt;code&gt;sling.install.skip&lt;/code&gt; comparable to the &lt;code&gt;maven.test.skip&lt;/code&gt;
property to prevent running the unit tests.</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>usePut</name>
          <type>boolean</type>
          <deprecated>Use {@link #deploymentMethod} instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>If a PUT via WebDAV should be used instead of the standard POST to the
Felix Web Console. In the &lt;code&gt;uninstall&lt;/code&gt; goal, a HTTP DELETE will be
used.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <bundleFileName implementation="java.lang.String" default-value="${project.build.directory}/${project.build.finalName}.jar">${sling.file}</bundleFileName>
        <bundleStart implementation="boolean" default-value="true">${sling.bundle.start}</bundleStart>
        <bundleStartLevel implementation="java.lang.String" default-value="20">${sling.bundle.startlevel}</bundleStartLevel>
        <deploymentMethod implementation="org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod">${sling.deploy.method}</deploymentMethod>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <mimeType implementation="java.lang.String" default-value="application/java-archive">${sling.mimeType}</mimeType>
        <mountByFS implementation="boolean" default-value="false">${sling.mountByFS}</mountByFS>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <refreshPackages implementation="boolean" default-value="true">${sling.refreshPackages}</refreshPackages>
        <skip implementation="boolean" default-value="false">${sling.install.skip}</skip>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <usePut implementation="boolean" default-value="false">${sling.usePut}</usePut>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>install-file</goal>
      <description>Install an OSGi bundle to a running Sling instance.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.BundleInstallFileMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>artifact</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A string of the form groupId:artifactId:version[:packaging[:classifier]].</description>
        </parameter>
        <parameter>
          <name>artifactId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The artifactId of the artifact to install</description>
        </parameter>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>bundleStart</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to start the uploaded bundle or not. Only applies when POSTing
to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>bundleStartLevel</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The start level to set on the installed bundle. If the bundle is already installed and therefore is only 
updated this parameter is ignored. The parameter is also ignored if the running Sling instance has no 
StartLevel service (which is unusual actually). Only applies when POSTing to Felix Web Console.</description>
        </parameter>
        <parameter>
          <name>classifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The classifier of the artifact to install</description>
        </parameter>
        <parameter>
          <name>deploymentMethod</name>
          <type>org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bundle deployment method. One of the following three values are allowed
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;WebConsole&lt;/strong&gt;, uses the &lt;a href=&quot;http://felix.apache.org/documentation/subprojects/apache-felix-web-console/web-console-restful-api.html#post-requests&quot;&gt;
 Felix Web Console REST API&lt;/a&gt; for deployment (HTTP POST). This is the default. 
 Make sure that {@link #slingUrl} points to the Felix Web Console in that case.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;WebDAV&lt;/strong&gt;, uses &lt;a href=&quot;https://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;
 WebDAV&lt;/a&gt; for deployment (HTTP PUT). Make sure that {@link #slingUrl} points to the entry path of 
 the Sling WebDAV bundle (usually below regular Sling root URL). Issues a HTTP Delete for the uninstall goal.
 &lt;li&gt;&lt;strong&gt;SlingPostServlet&lt;/strong&gt;, uses the
 &lt;a href=&quot;https://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html&quot;&gt;Sling Post Servlet&lt;/a&gt; for deployment (HTTP POST).
 Make sure that {@link #slingUrl} points a path which is handled by the Sling POST Servlet (usually below regular Sling root URL).&lt;/li&gt;
&lt;/ol&gt;

This has precedence over the deprecated parameter {@link #usePut}.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>groupId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The groupId of the artifact to install</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>mimeType</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The content type / mime type used for WebDAV or Sling POST deployment.</description>
        </parameter>
        <parameter>
          <name>mountByFS</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to add the mapping for the
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/accessing-filesystem-resources-extensions-fsresource.html&quot;&gt;Apache Sling File System Resource Provider&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>packaging</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The packaging of the artifact to install</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>pomRemoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>refreshPackages</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to refresh the packages after installing the uploaded bundle.
Only applies when POSTing to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>repositoryId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The id of the repository from which we&apos;ll download the artifact</description>
        </parameter>
        <parameter>
          <name>repositoryUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The url of the repository from which we&apos;ll download the artifact</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>usePut</name>
          <type>boolean</type>
          <deprecated>Use {@link #deploymentMethod} instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>If a PUT via WebDAV should be used instead of the standard POST to the
Felix Web Console. In the &lt;code&gt;uninstall&lt;/code&gt; goal, a HTTP DELETE will be
used.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>version</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The version of the artifact to install</description>
        </parameter>
      </parameters>
      <configuration>
        <artifact implementation="java.lang.String">${sling.artifact}</artifact>
        <artifactId implementation="java.lang.String">${sling.artifactId}</artifactId>
        <bundleFileName implementation="java.lang.String">${sling.file}</bundleFileName>
        <bundleStart implementation="boolean" default-value="true">${sling.bundle.start}</bundleStart>
        <bundleStartLevel implementation="java.lang.String" default-value="20">${sling.bundle.startlevel}</bundleStartLevel>
        <classifier implementation="java.lang.String">${sling.classifier}</classifier>
        <deploymentMethod implementation="org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod">${sling.deploy.method}</deploymentMethod>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <groupId implementation="java.lang.String">${sling.groupId}</groupId>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository">${localRepository}</localRepository>
        <mimeType implementation="java.lang.String" default-value="application/java-archive">${sling.mimeType}</mimeType>
        <mountByFS implementation="boolean" default-value="false">${sling.mountByFS}</mountByFS>
        <packaging implementation="java.lang.String" default-value="jar">${sling.packaging}</packaging>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <pomRemoteRepositories implementation="java.util.List">${project.remoteArtifactRepositories}</pomRemoteRepositories>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <refreshPackages implementation="boolean" default-value="true">${sling.refreshPackages}</refreshPackages>
        <repositoryId implementation="java.lang.String" default-value="temp">${sling.repoId}</repositoryId>
        <repositoryUrl implementation="java.lang.String">${sling.repoUrl}</repositoryUrl>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <usePut implementation="boolean" default-value="false">${sling.usePut}</usePut>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
        <version implementation="java.lang.String">${sling.version}</version>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>
          <field-name>artifactRepositoryFactory</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>artifactResolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout</role>
          <role-hint>default</role-hint>
          <field-name>repositoryLayout</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>uninstall</goal>
      <description>Uninstall an OSGi bundle from a running Sling instance.

The plugin places by default an HTTP POST request to &lt;a href=&quot;http://felix.apache.org/documentation/subprojects/apache-felix-web-console/web-console-restful-api.html#post-requests&quot;&gt;
Felix Web Console&lt;/a&gt; to uninstall the bundle.
It&apos;s also possible to use HTTP DELETE leveraging the &lt;a href=&quot;http://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;WebDAV bundle from Sling&lt;/a&gt;.
or the &lt;a href=&quot;http://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html&quot;&gt;Sling POST servlet&lt;/a&gt; to uninstall the bundle. 
The chosen method depends on the parameter {@link #deploymentMethod}.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>org.apache.sling.maven.bundlesupport.BundleUninstallMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bundleFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the generated JAR file.</description>
        </parameter>
        <parameter>
          <name>bundleStart</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to start the uploaded bundle or not. Only applies when POSTing
to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>bundleStartLevel</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The start level to set on the installed bundle. If the bundle is already installed and therefore is only 
updated this parameter is ignored. The parameter is also ignored if the running Sling instance has no 
StartLevel service (which is unusual actually). Only applies when POSTing to Felix Web Console.</description>
        </parameter>
        <parameter>
          <name>deploymentMethod</name>
          <type>org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod</type>
          <required>false</required>
          <editable>true</editable>
          <description>Bundle deployment method. One of the following three values are allowed
&lt;ol&gt;
 &lt;li&gt;&lt;strong&gt;WebConsole&lt;/strong&gt;, uses the &lt;a href=&quot;http://felix.apache.org/documentation/subprojects/apache-felix-web-console/web-console-restful-api.html#post-requests&quot;&gt;
 Felix Web Console REST API&lt;/a&gt; for deployment (HTTP POST). This is the default. 
 Make sure that {@link #slingUrl} points to the Felix Web Console in that case.&lt;/li&gt;
 &lt;li&gt;&lt;strong&gt;WebDAV&lt;/strong&gt;, uses &lt;a href=&quot;https://sling.apache.org/documentation/development/repository-based-development.html&quot;&gt;
 WebDAV&lt;/a&gt; for deployment (HTTP PUT). Make sure that {@link #slingUrl} points to the entry path of 
 the Sling WebDAV bundle (usually below regular Sling root URL). Issues a HTTP Delete for the uninstall goal.
 &lt;li&gt;&lt;strong&gt;SlingPostServlet&lt;/strong&gt;, uses the
 &lt;a href=&quot;https://sling.apache.org/documentation/bundles/manipulating-content-the-slingpostservlet-servlets-post.html&quot;&gt;Sling Post Servlet&lt;/a&gt; for deployment (HTTP POST).
 Make sure that {@link #slingUrl} points a path which is handled by the Sling POST Servlet (usually below regular Sling root URL).&lt;/li&gt;
&lt;/ol&gt;

This has precedence over the deprecated parameter {@link #usePut}.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Determines whether or not to fail the build if
the HTTP POST or PUT returns an non-OK response code.</description>
        </parameter>
        <parameter>
          <name>mimeType</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The content type / mime type used for WebDAV or Sling POST deployment.</description>
        </parameter>
        <parameter>
          <name>mountByFS</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to add the mapping for the
&lt;a href=&quot;https://sling.apache.org/documentation/bundles/accessing-filesystem-resources-extensions-fsresource.html&quot;&gt;Apache Sling File System Resource Provider&lt;/a&gt;.</description>
        </parameter>
        <parameter>
          <name>password</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The password to authenticate at the running Sling instance.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>refreshPackages</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to refresh the packages after installing the uploaded bundle.
Only applies when POSTing to Felix Web Console</description>
        </parameter>
        <parameter>
          <name>slingConsoleUrl</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The WebConsole URL of the running Sling instance. This is required for file system provider operations.
If not configured the value of slingUrl is used.</description>
        </parameter>
        <parameter>
          <name>slingUrl</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The URL of the running Sling instance. The default is only useful for &lt;strong&gt;WebConsole&lt;/strong&gt; deployment.</description>
        </parameter>
        <parameter>
          <name>slingUrlSuffix</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional url suffix which will be appended to the &lt;code&gt;sling.url&lt;/code&gt;
for use as the real target url. This allows to configure different target URLs
in each POM, while using the same common &lt;code&gt;sling.url&lt;/code&gt; in a parent
POM (eg. &lt;code&gt;sling.url=http://localhost:8080&lt;/code&gt; and
&lt;code&gt;sling.urlSuffix=/project/specific/path&lt;/code&gt;). This is typically used
in conjunction with WebDAV or SlingPostServlet deployment methods.</description>
        </parameter>
        <parameter>
          <name>usePut</name>
          <type>boolean</type>
          <deprecated>Use {@link #deploymentMethod} instead.</deprecated>
          <required>false</required>
          <editable>true</editable>
          <description>If a PUT via WebDAV should be used instead of the standard POST to the
Felix Web Console. In the &lt;code&gt;uninstall&lt;/code&gt; goal, a HTTP DELETE will be
used.</description>
        </parameter>
        <parameter>
          <name>user</name>
          <type>java.lang.String</type>
          <required>true</required>
          <editable>true</editable>
          <description>The user name to authenticate at the running Sling instance.</description>
        </parameter>
      </parameters>
      <configuration>
        <bundleFileName implementation="java.lang.String" default-value="${project.build.directory}/${project.build.finalName}.jar">${sling.file}</bundleFileName>
        <bundleStart implementation="boolean" default-value="true">${sling.bundle.start}</bundleStart>
        <bundleStartLevel implementation="java.lang.String" default-value="20">${sling.bundle.startlevel}</bundleStartLevel>
        <deploymentMethod implementation="org.apache.sling.maven.bundlesupport.AbstractBundleInstallMojo$BundleDeploymentMethod">${sling.deploy.method}</deploymentMethod>
        <failOnError implementation="boolean" default-value="true">${sling.failOnError}</failOnError>
        <mimeType implementation="java.lang.String" default-value="application/java-archive">${sling.mimeType}</mimeType>
        <mountByFS implementation="boolean" default-value="false">${sling.mountByFS}</mountByFS>
        <password implementation="java.lang.String" default-value="admin">${sling.password}</password>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <refreshPackages implementation="boolean" default-value="true">${sling.refreshPackages}</refreshPackages>
        <slingConsoleUrl implementation="java.lang.String">${sling.console.url}</slingConsoleUrl>
        <slingUrl implementation="java.lang.String" default-value="http://localhost:8080/system/console">${sling.url}</slingUrl>
        <slingUrlSuffix implementation="java.lang.String">${sling.urlSuffix}</slingUrlSuffix>
        <usePut implementation="boolean" default-value="false">${sling.usePut}</usePut>
        <user implementation="java.lang.String" default-value="admin">${sling.user}</user>
      </configuration>
    </mojo>
    <mojo>
      <goal>validate</goal>
      <description>The &lt;code&gt;validate&lt;/code&gt; goal checks the JSON code of a bundle.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-resources</phase>
      <implementation>org.apache.sling.maven.bundlesupport.ValidationMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven project.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to skip the validation.</description>
        </parameter>
        <parameter>
          <name>skipJson</name>
          <type>boolean</type>
          <required>true</required>
          <editable>true</editable>
          <description>Whether to skip the json validation.
At the time, there&apos;s no difference between &lt;code&gt;skip&lt;/code&gt; and &lt;code&gt;skipJson&lt;/code&gt; because only JSON files will be validated by now.</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <skip implementation="boolean" default-value="false">${sling.validation.skip}</skip>
        <skipJson implementation="boolean" default-value="false">${sling.validation.skipJson}</skipJson>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.5</version>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.johnzon</groupId>
      <artifactId>johnzon-core</artifactId>
      <type>jar</type>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-json_1.0_spec</artifactId>
      <type>jar</type>
      <version>1.0-alpha-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit.vault</groupId>
      <artifactId>org.apache.jackrabbit.vault</artifactId>
      <type>jar</type>
      <version>3.1.18</version>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.commons.osgi</artifactId>
      <type>jar</type>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-archiver</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-shared</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>nekohtml</groupId>
      <artifactId>xercesMinimal</artifactId>
      <type>jar</type>
      <version>1.9.6.2</version>
    </dependency>
    <dependency>
      <groupId>nekohtml</groupId>
      <artifactId>nekohtml</artifactId>
      <type>jar</type>
      <version>1.9.6.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-webdav-jackrabbit</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-webdav</artifactId>
      <type>jar</type>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-jcr-commons</artifactId>
      <type>jar</type>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <type>jar</type>
      <version>1.5.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <type>jar</type>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <type>jar</type>
      <version>1.5.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-logging-api</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-external</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh-common</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interactivity-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
      <version>0.1.38</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <type>jar</type>
      <version>0.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-archiver</artifactId>
      <type>jar</type>
      <version>2.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-io</artifactId>
      <type>jar</type>
      <version>2.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
      <type>jar</type>
      <version>1.9</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0.20</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.21</version>
    </dependency>
    <dependency>
      <groupId>net.sf.scannotation</groupId>
      <artifactId>scannotation</artifactId>
      <type>jar</type>
      <version>1.0.2</version>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <type>jar</type>
      <version>3.6.0.GA</version>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>adapter-annotations</artifactId>
      <type>jar</type>
      <version>1.0.0</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-all</artifactId>
      <type>jar</type>
      <version>3.3.1</version>
    </dependency>
  </dependencies>
</plugin>
